import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
     static int dp[][][];
	public static void main (String[] args)
	 {
	 Scanner sc= new Scanner(System.in);
	 int t = sc.nextInt();
	 while(t-->0)
	 {
	     int k = sc.nextInt();
	     int n = sc.nextInt();
	     int a[][] = new int[n][n];
	     dp = new int[n][n][k+1];
	     for(int i = 0; i<n ; i++)
	     {
	         for(int j = 0; j<n ; j++)
	         {
	             a[i][j] = sc.nextInt();
	         }
	     }
	     for(int i = 0; i<n ; i++)
	     {
	         for(int j = 0; j<n ; j++)
	         {
	             for(int l = 0; l<=k; l++)
	             {
	                 dp[i][j][l] = -1;
	             }
	         }
	     }
	     System.out.println(count(a , n-1 , n-1 , k));
	     
	 }
	 }
	 public static int count(int a[][] , int m , int n , int k)
	 {
	     if(m<0 || n<0 || k<=0)
	     return 0;
	     if(m==0 && n==0)
	     {
	         if(k==a[m][n])
	         return 1;
	         else
	         return 0;
	     }
	     
	     if(dp[m][n][k]!=-1)
	     return dp[m][n][k];
	     dp[m][n][k] = count(a , m-1 , n , k-a[m][n]) + count(a , m , n-1 , k-a[m][n]);
	     return dp[m][n][k];
	 }
}
